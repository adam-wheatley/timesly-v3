### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


type Company {
  id: String!
  name: String!
}

input CompanyCreateOneWithoutUsersInput {
  connect: CompanyWhereUniqueInput
  create: CompanyCreateWithoutUsersInput
}

input CompanyCreateWithoutUsersInput {
  id: String
  name: String!
}

input CompanyWhereUniqueInput {
  id: String
}

type Mutation {
  createDraft(authorEmail: String, content: String, title: String!): Post!
  deleteOnePost(where: PostWhereUniqueInput!): Post
  signupUser(data: UserCreateInput!): User!
}

type Post {
  author: User
  content: String
  id: String!
  published: Boolean!
  title: String!
}

input PostCreateManyWithoutAuthorInput {
  connect: [PostWhereUniqueInput!]
  create: [PostCreateWithoutAuthorInput!]
}

input PostCreateWithoutAuthorInput {
  content: String
  id: String
  published: Boolean
  title: String!
}

input PostWhereUniqueInput {
  id: String
}

type Query {
  feed: [Post!]!
  filterPosts(searchString: String): [Post!]!
  post(where: PostWhereUniqueInput!): Post
}

type User {
  company: Company!
  email: String!
  firstName: String
  id: String!
  lastName: String
  posts(after: PostWhereUniqueInput, before: PostWhereUniqueInput, first: Int, last: Int, skip: Int): [Post!]!
}

input UserCreateInput {
  company: CompanyCreateOneWithoutUsersInput!
  email: String!
  firstName: String
  id: String
  isActive: Boolean
  lastName: String
  password: String!
  posts: PostCreateManyWithoutAuthorInput
  tokenVersion: Int
}
